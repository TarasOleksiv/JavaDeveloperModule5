___________________________________________________

Відео демонстрації роботи проекту:

    https://1drv.ms/v/s!AiCFKPE68x7lhgD6YEUtGn-_Z78Q

___________________________________________________

Проект доступний на heroku за наступним лінком:

    https://store-products.herokuapp.com/

___________________________________________________

Структура проекту:

main/java/...../
    -- controller : контролери
    -- dao : dao
    -- model : моделі
    -- service : сервіси
    -- utils : клас для генерації хешованих стрінгів
        (використав для генерації закриптованих паролів для стартового скрипта заливки даних у базу)
    -- validator : клас-валідатор для форм логування/аутентифікації

    -- resources
        -- database - схема БД та скрипти ініціалізації БД:
            -- DBscheme.png - схема БД.
            -- initDB.sql - створює всі необхідні таблиці на базі.
            -- populateDB.sql - заповнює даними таблиці.
        -- database.properties - файл конфігурації з'єднання з БД.
        -- logback.xml - файл конфігурації logback.

    -- webapp
        -- resources (пакет кофігурації стилів css)
            -- css
            -- js
        -- WEB-INF
            -- views (jsp сторінки проекту)
                Сторінка аутентифікації - login.jsp. При спробі зайти на сайт проекту
                неаутентифіковані користувачі перенаправляються на цю сторінку.
                У разі успішної аутентифікації користувачі перенаправляються на стартову сторінку index.jsp
        -- web.xml - дескриптор розгортання проекту
        -- appconfig-root.xml - файл конфігурації контексту
        -- appconfig-mvc.xml - файл конфігурації spring-mvc
        -- appconfig-data.xml - файл конфігурації spring-data
        -- appconfig-security - файл конфігурації spring-security

_____________________________________________________

Схема розгортання проекту на локальній машині.

    Етап 0: Підготовка.

    1) Зклонувати гітом проект з гітхабу.
    2) Створити новий проект в IDEA імпортувавши зклонований в п.1 Maven проект.
    3) Імпортувати всі зміни у pom.xml.
    4) Створити на локальному сервері mySQL базу toleksiv_store
        (назву базу можна побачити у файлі /resources/database.properties).
    5) Прописати у файлі /resources/database.properties правильні значення юзера, паролю та url на створену базу
    6) Створити у проекті новий Data Source з драйвером mySQL, використавши дані з /resources/database.properties

        Далі запускаєм скрипти ініціалізації бази на Data Source, створеному у п.6.
    7) Запустити скрипт /resources/database/initDB.sql - створяться всі необхідні таблиці (5 штук):
        а) [manufacturers] - виробники;
        б) [products] - товари;
        в) [roles] - ролі;
        г) [users] - користувачі;
        д) [user_roles] - таблиця, що показує зв'язок (many-to-many) між користувачами та ролями.
    8) Запустити скрипт /resources/database/populateDB.sql - таблиці заповняться відповідними даними:
        а) [manufacturers] - 4 виробники;
        б) [products] - 16 товарів;
        в) [roles] - 2 ролі {'ROLE_ADMIN', 'ROLE_USER'};
        г) [users] - 3 користувачі:
            a) admin (password: admin);
            b) toleksiv (password: toleksiv);
            c) guest (password: guest).
            Для хешування паролів використовувася клас utils.PasswordEncoderGenerator
        д) [user_roles]:
            a) admin: {'ROLE_ADMIN'};
            b) toleksiv: {'ROLE_ADMIN', 'ROLE_USER'};
            c) guest: {'ROLE_USER'}.
        База до роботи готова.

        Далі готовимо до роботи веб-аплікацію.
        На машині необхідно мати окремо запущений сервер Томкат.
    9) Створити war файл проекту засобами Maven: (target/Store.war)
    10) Скопіювати target/Store.war до папки webapps Томкату.
    11) Запустити сервер Томкат (якщо незапущений).
    ---------------------------------------------------------------------------------------------------
    Етап 1: Демонстрація роботи web аплікації.

    12) Запустити у броузері стартову сторінку аплікації за лінком (вказати свій робочий порт Томкату)
        http://localhost:8080/Store

    13) Відкриється сторінка логування.
        Надалі можна використати логіни/паролі з відповідними правами з п.8(г,д),
            або зареєструватись у програмі в якості нового користувача.
            Всі нові користувачі створюються за замовчуванням лише з однією роллю 'ROLE_USER'.
            Права на зміну ролей користувачів мають лише адміни (admin, toleksiv)(п.8.д)
            Щоб зробити новоствореного користувача адміном, потрібно
                - вилогуватись
                - залогуватись під адміном
                - зайти на відповідну сторінку і поставити галочку 'Admin'
            Аналогічно знімаються права адміна з користувача.

